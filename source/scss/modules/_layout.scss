/**
* File:        _layout.scss
* Description: _layout.scss for makeitso
* Author:      Sebastiaan Bonardt - @_sebbon
*/

/**
* About the Responsive Web Design breakpoints in this setup:
* from base.scss, use small-screens, medium-screens, large-screens, xlarge-screens, wide-screens
* Use them with "respond-to" mixin from base.scss as "@include respond-to(small-screens) {}"
* 
* page setup: body direct descendants are the main wrappers containing direct 
* descendant with .inner-wrap class set to center the content on the page. Used in favor 
* of a general top level wrap all wrapper for markup esthetics sake. 
*
* The design pattern here is that some parts (e.g. header/footer) of the website need a full-width
* background color, but the contents needs to be centered on the page
*
* ! If no full width background-colors are in the design you can remove the inner-wrap div's and
* set the $site-max-width on the <body> with margin:0 auto;
*
*/

html {
    height: 100%;
}

body {
    min-height: 100%;
    margin: 0;
    position: relative;
    padding: 0;
    > header, footer, main {
        width: 100%;
        display: block;
        overflow: hidden;
    }
    > header {
        padding:0;
    }
    > footer {
        min-height: 20rem;
        background-color: $lightGrey;
        padding: 1em 0;
    }
}

main {
    margin: 0;
    padding-top: 1rem;
    @include respond-to(medium-screens) {
        padding-top: 2rem;
    } 
    > aside, article, section {
        margin-bottom: 2rem;
    }
    > aside {
        padding: 1rem 0;
    }
}

aside {
    border-top: 1px solid $lightGrey;
    overflow: hidden;
    clear: both;
    margin-bottom: 2rem;
    &:last-child {
        margin-bottom: 0;
    }
}

.inner-wrap {
    @extend %group;
    margin: 0 auto;
    padding: 2rem 0.625rem;
    max-width: $site-max-width;
    position:relative;
    @include respond-to(large-screens) {
        padding: 1rem 1.25rem;
    }
    main > & {
        padding: 0 0.625rem 1rem;
        @include respond-to(large-screens) {
            padding: 1.25rem;
        }
    }
    header > & {
        padding: 1rem 0.625rem;
        @include respond-to(large-screens) {
            padding: 1rem 1.25rem;
        }
    }
}

.main-wrap {
    @extend %group;
    margin: 0 auto;
    padding: 1rem 0.625rem;
    max-width: $site-max-width;
    position: relative;
}

.skipcontent {
    background-color: #fff;
    left: -9999px;
    padding: 0.3125em 1em;
    position: absolute;
    padding:1rem;
    display:inline-block;  
    z-index:2;
    font-weight: bolder;
    &:after {
        content: ">>";
        margin-left:0.625rem;
    }
    &:focus {
        left:1.25em;                     
    }
}

.logo {
    line-height: 1;
    &:link, &:visited {
        color: $black;
        text-decoration: none;
        font-size: 3.5rem;
    }
    &:hover, &:active, &:focus {
        text-decoration: underline;
    }
    @include respond-to(medium-screens) {
        float:left;
    }
    span {
        // display:none;
        text-transform: uppercase;
        font-size: 3rem;
        font-family: $baseHeaderFontFamily;
        font-weight: 800;
        @include respond-to(xlarge-screens) {
            font-size: 4rem;
        }
    }
    &.centered {
        text-align: center;
        @include respond-to(medium-screens) {
            float:none;
        }
        a {
            display:inline-block;
        }
    }
    img {
        width: 345px;
    }
}

.site-name {
    display:block;
}

.tagline {
    display: block;
    clear: both;
}

.breadcrumb {
    margin:1em 0;
}

.main-content {
    overflow:hidden;
    @include respond-to(large-screens) {
        max-width: 66%;
        float: left;
        padding-right: 1rem;
    }
    @include respond-to(xlarge-screens) {
        padding-right: 3rem;
    }
    aside {
        clear: none;
        background-color: transparent;
        @include respond-to(xlarge-screens) {
            display: block;
            clear: both;
            max-width: 44rem;
        }
    }
}


// body content is the content-wrapper used _in_ main-content
.body-content {
    @extend .group;
    margin-bottom: $baseBottomMargin;
    // @include respond-to(large-screens) {
    //     max-width:44rem;
    // }
    // @include respond-to(xlarge-screens) {
    //     float: left;
    //     width:66%;
    // }
    // @include respond-to(wide-screens) {
    //     max-width:50rem;
    // }
}

// aside class 'sidebar'
.sidebar {
    background-color: transparent;
    border-top: 0;
    @include respond-to(large-screens) {
        float: left;
        width: 31%;
        clear: none;
        margin-top: 5rem;
    }
    & + .main-content {
        @include respond-to(large-screens) {
        float: left;
        width: 66%;
        }
    }
}

.sidebar.sidebar-second {
    @include respond-to(large-screens) {
    float: left;
    margin-left: 3%;
    }
}


.two-sidebars {
    .main-content {
        @include respond-to(large-screens) {
            
        }
    }
    // both asides on level with main-content left and right when there's 'room' xlarge and up
    & ~ aside {
        @include respond-to(large-screens) {

        }
    }
}


.footer-logo {
    margin: 4rem 0 0 0;
    float: right;
    .logotype {
        // display:none;
        color:$grey;
        text-transform: uppercase;
        font-size: 3rem;
        line-height: 1;
        font-family: $baseHeaderFontFamily;
        font-weight: 800;
        @include respond-to(xlarge-screens) {
            font-size: 4rem;
        }
    }
}


.footer-block {
    margin-bottom: $baseBottomMargin;
    @include respond-to(medium-screens) {
        float:left;
        width:46%;
        margin-right:2%;


    }
    @include respond-to(large-screens) {
        width:33%;
        padding-right: 2rem;
        margin: 0;
    }
}

.contentblock {
    margin: 0 0 $baseBottomMargin;
}